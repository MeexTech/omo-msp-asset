// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/asset/asset.proto

package asset

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OwnerType int32

const (
	OwnerType_Single OwnerType = 0
	OwnerType_Group  OwnerType = 1
)

var OwnerType_name = map[int32]string{
	0: "Single",
	1: "Group",
}

var OwnerType_value = map[string]int32{
	"Single": 0,
	"Group":  1,
}

func (x OwnerType) String() string {
	return proto.EnumName(OwnerType_name, int32(x))
}

func (OwnerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{0}
}

type AssetInfo struct {
	Uid                  string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Md5                  string        `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	Format               string        `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	Version              string        `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Size                 uint64        `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Language             string        `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	Type                 uint32        `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Owner                string        `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty"`
	Url                  string        `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	Created              int64         `protobuf:"varint,11,opt,name=created,proto3" json:"created,omitempty"`
	Updated              int64         `protobuf:"varint,12,opt,name=updated,proto3" json:"updated,omitempty"`
	Creator              string        `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	Operator             string        `protobuf:"bytes,14,opt,name=operator,proto3" json:"operator,omitempty"`
	Width                uint32        `protobuf:"varint,15,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32        `protobuf:"varint,16,opt,name=height,proto3" json:"height,omitempty"`
	Snapshot             string        `protobuf:"bytes,17,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Small                string        `protobuf:"bytes,18,opt,name=small,proto3" json:"small,omitempty"`
	Remark               string        `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	Meta                 string        `protobuf:"bytes,21,opt,name=meta,proto3" json:"meta,omitempty"`
	Weight               uint32        `protobuf:"varint,22,opt,name=weight,proto3" json:"weight,omitempty"`
	Status               uint32        `protobuf:"varint,23,opt,name=status,proto3" json:"status,omitempty"`
	Source               string        `protobuf:"bytes,24,opt,name=source,proto3" json:"source,omitempty"`
	Quote                string        `protobuf:"bytes,25,opt,name=quote,proto3" json:"quote,omitempty"`
	Scope                uint32        `protobuf:"varint,26,opt,name=scope,proto3" json:"scope,omitempty"`
	Thumbs               []*ThumbBrief `protobuf:"bytes,19,rep,name=thumbs,proto3" json:"thumbs,omitempty"`
	Links                []string      `protobuf:"bytes,31,rep,name=links,proto3" json:"links,omitempty"`
	Tags                 []string      `protobuf:"bytes,32,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AssetInfo) Reset()         { *m = AssetInfo{} }
func (m *AssetInfo) String() string { return proto.CompactTextString(m) }
func (*AssetInfo) ProtoMessage()    {}
func (*AssetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{0}
}

func (m *AssetInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetInfo.Unmarshal(m, b)
}
func (m *AssetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetInfo.Marshal(b, m, deterministic)
}
func (m *AssetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetInfo.Merge(m, src)
}
func (m *AssetInfo) XXX_Size() int {
	return xxx_messageInfo_AssetInfo.Size(m)
}
func (m *AssetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AssetInfo proto.InternalMessageInfo

func (m *AssetInfo) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *AssetInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AssetInfo) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *AssetInfo) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *AssetInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AssetInfo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *AssetInfo) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *AssetInfo) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AssetInfo) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *AssetInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AssetInfo) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *AssetInfo) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *AssetInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *AssetInfo) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *AssetInfo) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *AssetInfo) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *AssetInfo) GetSnapshot() string {
	if m != nil {
		return m.Snapshot
	}
	return ""
}

func (m *AssetInfo) GetSmall() string {
	if m != nil {
		return m.Small
	}
	return ""
}

func (m *AssetInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *AssetInfo) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

func (m *AssetInfo) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *AssetInfo) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AssetInfo) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *AssetInfo) GetQuote() string {
	if m != nil {
		return m.Quote
	}
	return ""
}

func (m *AssetInfo) GetScope() uint32 {
	if m != nil {
		return m.Scope
	}
	return 0
}

func (m *AssetInfo) GetThumbs() []*ThumbBrief {
	if m != nil {
		return m.Thumbs
	}
	return nil
}

func (m *AssetInfo) GetLinks() []string {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *AssetInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ThumbBrief struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Face                 string   `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	Probably             float32  `protobuf:"fixed32,4,opt,name=probably,proto3" json:"probably,omitempty"`
	Similar              float32  `protobuf:"fixed32,5,opt,name=similar,proto3" json:"similar,omitempty"`
	Blur                 float32  `protobuf:"fixed32,6,opt,name=blur,proto3" json:"blur,omitempty"`
	Url                  string   `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThumbBrief) Reset()         { *m = ThumbBrief{} }
func (m *ThumbBrief) String() string { return proto.CompactTextString(m) }
func (*ThumbBrief) ProtoMessage()    {}
func (*ThumbBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{1}
}

func (m *ThumbBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThumbBrief.Unmarshal(m, b)
}
func (m *ThumbBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThumbBrief.Marshal(b, m, deterministic)
}
func (m *ThumbBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThumbBrief.Merge(m, src)
}
func (m *ThumbBrief) XXX_Size() int {
	return xxx_messageInfo_ThumbBrief.Size(m)
}
func (m *ThumbBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_ThumbBrief.DiscardUnknown(m)
}

var xxx_messageInfo_ThumbBrief proto.InternalMessageInfo

func (m *ThumbBrief) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ThumbBrief) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ThumbBrief) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *ThumbBrief) GetProbably() float32 {
	if m != nil {
		return m.Probably
	}
	return 0
}

func (m *ThumbBrief) GetSimilar() float32 {
	if m != nil {
		return m.Similar
	}
	return 0
}

func (m *ThumbBrief) GetBlur() float32 {
	if m != nil {
		return m.Blur
	}
	return 0
}

func (m *ThumbBrief) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ReqAssetAdd struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Md5                  string   `protobuf:"bytes,2,opt,name=md5,proto3" json:"md5,omitempty"`
	Format               string   `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Size                 uint64   `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Language             string   `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
	Uuid                 string   `protobuf:"bytes,7,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Owner                string   `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
	Type                 uint32   `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Operator             string   `protobuf:"bytes,10,opt,name=operator,proto3" json:"operator,omitempty"`
	Width                uint32   `protobuf:"varint,11,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,12,opt,name=height,proto3" json:"height,omitempty"`
	Snapshot             string   `protobuf:"bytes,13,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Small                string   `protobuf:"bytes,14,opt,name=small,proto3" json:"small,omitempty"`
	Remark               string   `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
	Meta                 string   `protobuf:"bytes,17,opt,name=meta,proto3" json:"meta,omitempty"`
	Quote                string   `protobuf:"bytes,18,opt,name=quote,proto3" json:"quote,omitempty"`
	Scope                uint32   `protobuf:"varint,19,opt,name=scope,proto3" json:"scope,omitempty"`
	Thumbs               []string `protobuf:"bytes,15,rep,name=thumbs,proto3" json:"thumbs,omitempty"`
	Tags                 []string `protobuf:"bytes,21,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAssetAdd) Reset()         { *m = ReqAssetAdd{} }
func (m *ReqAssetAdd) String() string { return proto.CompactTextString(m) }
func (*ReqAssetAdd) ProtoMessage()    {}
func (*ReqAssetAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{2}
}

func (m *ReqAssetAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAssetAdd.Unmarshal(m, b)
}
func (m *ReqAssetAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAssetAdd.Marshal(b, m, deterministic)
}
func (m *ReqAssetAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAssetAdd.Merge(m, src)
}
func (m *ReqAssetAdd) XXX_Size() int {
	return xxx_messageInfo_ReqAssetAdd.Size(m)
}
func (m *ReqAssetAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAssetAdd.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAssetAdd proto.InternalMessageInfo

func (m *ReqAssetAdd) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqAssetAdd) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *ReqAssetAdd) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *ReqAssetAdd) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ReqAssetAdd) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ReqAssetAdd) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *ReqAssetAdd) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ReqAssetAdd) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReqAssetAdd) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReqAssetAdd) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ReqAssetAdd) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ReqAssetAdd) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReqAssetAdd) GetSnapshot() string {
	if m != nil {
		return m.Snapshot
	}
	return ""
}

func (m *ReqAssetAdd) GetSmall() string {
	if m != nil {
		return m.Small
	}
	return ""
}

func (m *ReqAssetAdd) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqAssetAdd) GetMeta() string {
	if m != nil {
		return m.Meta
	}
	return ""
}

func (m *ReqAssetAdd) GetQuote() string {
	if m != nil {
		return m.Quote
	}
	return ""
}

func (m *ReqAssetAdd) GetScope() uint32 {
	if m != nil {
		return m.Scope
	}
	return 0
}

func (m *ReqAssetAdd) GetThumbs() []string {
	if m != nil {
		return m.Thumbs
	}
	return nil
}

func (m *ReqAssetAdd) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ReqAssetFlag struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Flag                 string   `protobuf:"bytes,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Operator             string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAssetFlag) Reset()         { *m = ReqAssetFlag{} }
func (m *ReqAssetFlag) String() string { return proto.CompactTextString(m) }
func (*ReqAssetFlag) ProtoMessage()    {}
func (*ReqAssetFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{3}
}

func (m *ReqAssetFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAssetFlag.Unmarshal(m, b)
}
func (m *ReqAssetFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAssetFlag.Marshal(b, m, deterministic)
}
func (m *ReqAssetFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAssetFlag.Merge(m, src)
}
func (m *ReqAssetFlag) XXX_Size() int {
	return xxx_messageInfo_ReqAssetFlag.Size(m)
}
func (m *ReqAssetFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAssetFlag.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAssetFlag proto.InternalMessageInfo

func (m *ReqAssetFlag) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReqAssetFlag) GetFlag() string {
	if m != nil {
		return m.Flag
	}
	return ""
}

func (m *ReqAssetFlag) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type ReqAssetWeight struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Weight               uint32   `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Operator             string   `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAssetWeight) Reset()         { *m = ReqAssetWeight{} }
func (m *ReqAssetWeight) String() string { return proto.CompactTextString(m) }
func (*ReqAssetWeight) ProtoMessage()    {}
func (*ReqAssetWeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{4}
}

func (m *ReqAssetWeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAssetWeight.Unmarshal(m, b)
}
func (m *ReqAssetWeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAssetWeight.Marshal(b, m, deterministic)
}
func (m *ReqAssetWeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAssetWeight.Merge(m, src)
}
func (m *ReqAssetWeight) XXX_Size() int {
	return xxx_messageInfo_ReqAssetWeight.Size(m)
}
func (m *ReqAssetWeight) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAssetWeight.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAssetWeight proto.InternalMessageInfo

func (m *ReqAssetWeight) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReqAssetWeight) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ReqAssetWeight) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type ReplyAssetOne struct {
	Info                 *AssetInfo   `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Status               *ReplyStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyAssetOne) Reset()         { *m = ReplyAssetOne{} }
func (m *ReplyAssetOne) String() string { return proto.CompactTextString(m) }
func (*ReplyAssetOne) ProtoMessage()    {}
func (*ReplyAssetOne) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{5}
}

func (m *ReplyAssetOne) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAssetOne.Unmarshal(m, b)
}
func (m *ReplyAssetOne) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAssetOne.Marshal(b, m, deterministic)
}
func (m *ReplyAssetOne) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAssetOne.Merge(m, src)
}
func (m *ReplyAssetOne) XXX_Size() int {
	return xxx_messageInfo_ReplyAssetOne.Size(m)
}
func (m *ReplyAssetOne) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAssetOne.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAssetOne proto.InternalMessageInfo

func (m *ReplyAssetOne) GetInfo() *AssetInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ReplyAssetOne) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ReqAssetList struct {
	List                 []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAssetList) Reset()         { *m = ReqAssetList{} }
func (m *ReqAssetList) String() string { return proto.CompactTextString(m) }
func (*ReqAssetList) ProtoMessage()    {}
func (*ReqAssetList) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{6}
}

func (m *ReqAssetList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAssetList.Unmarshal(m, b)
}
func (m *ReqAssetList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAssetList.Marshal(b, m, deterministic)
}
func (m *ReqAssetList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAssetList.Merge(m, src)
}
func (m *ReqAssetList) XXX_Size() int {
	return xxx_messageInfo_ReqAssetList.Size(m)
}
func (m *ReqAssetList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAssetList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAssetList proto.InternalMessageInfo

func (m *ReqAssetList) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

type ReqAssetUpdate struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Remark               string   `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	Operator             string   `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAssetUpdate) Reset()         { *m = ReqAssetUpdate{} }
func (m *ReqAssetUpdate) String() string { return proto.CompactTextString(m) }
func (*ReqAssetUpdate) ProtoMessage()    {}
func (*ReqAssetUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{7}
}

func (m *ReqAssetUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAssetUpdate.Unmarshal(m, b)
}
func (m *ReqAssetUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAssetUpdate.Marshal(b, m, deterministic)
}
func (m *ReqAssetUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAssetUpdate.Merge(m, src)
}
func (m *ReqAssetUpdate) XXX_Size() int {
	return xxx_messageInfo_ReqAssetUpdate.Size(m)
}
func (m *ReqAssetUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAssetUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAssetUpdate proto.InternalMessageInfo

func (m *ReqAssetUpdate) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *ReqAssetUpdate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqAssetUpdate) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *ReqAssetUpdate) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

type ReplyAssetList struct {
	Owner                string       `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	List                 []*AssetInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Status               *ReplyStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Pages                uint32       `protobuf:"varint,4,opt,name=pages,proto3" json:"pages,omitempty"`
	Total                uint32       `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyAssetList) Reset()         { *m = ReplyAssetList{} }
func (m *ReplyAssetList) String() string { return proto.CompactTextString(m) }
func (*ReplyAssetList) ProtoMessage()    {}
func (*ReplyAssetList) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{8}
}

func (m *ReplyAssetList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAssetList.Unmarshal(m, b)
}
func (m *ReplyAssetList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAssetList.Marshal(b, m, deterministic)
}
func (m *ReplyAssetList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAssetList.Merge(m, src)
}
func (m *ReplyAssetList) XXX_Size() int {
	return xxx_messageInfo_ReplyAssetList.Size(m)
}
func (m *ReplyAssetList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAssetList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAssetList proto.InternalMessageInfo

func (m *ReplyAssetList) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReplyAssetList) GetList() []*AssetInfo {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *ReplyAssetList) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyAssetList) GetPages() uint32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *ReplyAssetList) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type ReplyAssetToken struct {
	Status               *ReplyStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Domain               string       `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Limit                uint32       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Expire               uint32       `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`
	Bucket               string       `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Token                string       `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
	Access               string       `protobuf:"bytes,7,opt,name=access,proto3" json:"access,omitempty"`
	Secret               string       `protobuf:"bytes,8,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyAssetToken) Reset()         { *m = ReplyAssetToken{} }
func (m *ReplyAssetToken) String() string { return proto.CompactTextString(m) }
func (*ReplyAssetToken) ProtoMessage()    {}
func (*ReplyAssetToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_78e4568551c90fa4, []int{9}
}

func (m *ReplyAssetToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAssetToken.Unmarshal(m, b)
}
func (m *ReplyAssetToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAssetToken.Marshal(b, m, deterministic)
}
func (m *ReplyAssetToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAssetToken.Merge(m, src)
}
func (m *ReplyAssetToken) XXX_Size() int {
	return xxx_messageInfo_ReplyAssetToken.Size(m)
}
func (m *ReplyAssetToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAssetToken.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAssetToken proto.InternalMessageInfo

func (m *ReplyAssetToken) GetStatus() *ReplyStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReplyAssetToken) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ReplyAssetToken) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReplyAssetToken) GetExpire() uint32 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *ReplyAssetToken) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *ReplyAssetToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ReplyAssetToken) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *ReplyAssetToken) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func init() {
	proto.RegisterEnum("omo.msp.asset.OwnerType", OwnerType_name, OwnerType_value)
	proto.RegisterType((*AssetInfo)(nil), "omo.msp.asset.AssetInfo")
	proto.RegisterType((*ThumbBrief)(nil), "omo.msp.asset.ThumbBrief")
	proto.RegisterType((*ReqAssetAdd)(nil), "omo.msp.asset.ReqAssetAdd")
	proto.RegisterType((*ReqAssetFlag)(nil), "omo.msp.asset.ReqAssetFlag")
	proto.RegisterType((*ReqAssetWeight)(nil), "omo.msp.asset.ReqAssetWeight")
	proto.RegisterType((*ReplyAssetOne)(nil), "omo.msp.asset.ReplyAssetOne")
	proto.RegisterType((*ReqAssetList)(nil), "omo.msp.asset.ReqAssetList")
	proto.RegisterType((*ReqAssetUpdate)(nil), "omo.msp.asset.ReqAssetUpdate")
	proto.RegisterType((*ReplyAssetList)(nil), "omo.msp.asset.ReplyAssetList")
	proto.RegisterType((*ReplyAssetToken)(nil), "omo.msp.asset.ReplyAssetToken")
}

func init() {
	proto.RegisterFile("proto/asset/asset.proto", fileDescriptor_78e4568551c90fa4)
}

var fileDescriptor_78e4568551c90fa4 = []byte{
	// 1118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xd1, 0x6e, 0xdb, 0x36,
	0x14, 0x8d, 0x6c, 0xc7, 0x89, 0x69, 0x3b, 0x4d, 0xd5, 0x36, 0x65, 0xbd, 0x76, 0x33, 0xf4, 0x14,
	0x0c, 0x45, 0x86, 0x65, 0xe8, 0x07, 0x24, 0xdb, 0xe2, 0x65, 0x68, 0xd1, 0x41, 0xc9, 0x36, 0x60,
	0x6f, 0xb4, 0x44, 0x3b, 0x5a, 0x24, 0x51, 0x21, 0xa9, 0x64, 0xd9, 0xf7, 0xec, 0x61, 0x1f, 0xb0,
	0x3f, 0xd9, 0x07, 0xec, 0x79, 0x7f, 0x31, 0xdc, 0x4b, 0x4a, 0x96, 0x13, 0xc9, 0x31, 0xb2, 0x97,
	0x80, 0xe7, 0xf2, 0xfa, 0xe8, 0xf2, 0xf0, 0xdc, 0x4b, 0x84, 0xbc, 0xcc, 0xa4, 0xd0, 0xe2, 0x0b,
	0xa6, 0x14, 0xd7, 0xe6, 0xef, 0x01, 0x46, 0xdc, 0xa1, 0x48, 0xc4, 0x41, 0xa2, 0xb2, 0x03, 0x0c,
	0x8e, 0x68, 0x35, 0x2f, 0x10, 0x49, 0x22, 0x52, 0x93, 0xe8, 0xfd, 0xb9, 0x49, 0x7a, 0x47, 0x10,
	0x3e, 0x4d, 0x67, 0xc2, 0xdd, 0x25, 0xed, 0x3c, 0x0a, 0xa9, 0x33, 0x76, 0xf6, 0x7b, 0x3e, 0x2c,
	0x5d, 0x97, 0x74, 0x52, 0x96, 0x70, 0xda, 0xc2, 0x10, 0xae, 0x21, 0x2b, 0x09, 0xdf, 0xd1, 0xb6,
	0xc9, 0x4a, 0xc2, 0x77, 0xee, 0x1e, 0xe9, 0xce, 0x84, 0x4c, 0x98, 0xa6, 0x1d, 0x0c, 0x5a, 0xe4,
	0x52, 0xb2, 0x75, 0xcd, 0xa5, 0x8a, 0x44, 0x4a, 0x37, 0x71, 0xa3, 0x80, 0xc0, 0xab, 0xa2, 0xdf,
	0x39, 0xed, 0x8e, 0x9d, 0xfd, 0x8e, 0x8f, 0x6b, 0x77, 0x44, 0xb6, 0x63, 0x96, 0xce, 0x73, 0x36,
	0xe7, 0x74, 0x0b, 0xd3, 0x4b, 0x0c, 0xf9, 0xfa, 0x36, 0xe3, 0x74, 0x7b, 0xec, 0xec, 0x0f, 0x7d,
	0x5c, 0xbb, 0xcf, 0xc9, 0xa6, 0xb8, 0x49, 0xb9, 0xa4, 0x3d, 0x4c, 0x36, 0x00, 0xcf, 0x20, 0x63,
	0x4a, 0xec, 0x19, 0x64, 0x0c, 0x55, 0x04, 0x92, 0x33, 0xcd, 0x43, 0xda, 0x1f, 0x3b, 0xfb, 0x6d,
	0xbf, 0x80, 0xb0, 0x93, 0x67, 0x21, 0xee, 0x0c, 0xcc, 0x8e, 0x85, 0xe5, 0x6f, 0x84, 0xa4, 0x43,
	0x53, 0xb9, 0x85, 0x50, 0xa5, 0xc8, 0xb8, 0xc4, 0xad, 0x1d, 0x53, 0x65, 0x81, 0xa1, 0xa2, 0x9b,
	0x28, 0xd4, 0x17, 0xf4, 0x09, 0x96, 0x69, 0x00, 0xa8, 0x73, 0xc1, 0xa3, 0xf9, 0x85, 0xa6, 0xbb,
	0x18, 0xb6, 0x08, 0x98, 0x54, 0xca, 0x32, 0x75, 0x21, 0x34, 0x7d, 0x6a, 0x98, 0x0a, 0x0c, 0x4c,
	0x2a, 0x61, 0x71, 0x4c, 0x5d, 0x73, 0x36, 0x04, 0xc0, 0x24, 0x79, 0xc2, 0xe4, 0x25, 0x7d, 0x6e,
	0x74, 0x36, 0x08, 0xd4, 0x49, 0xb8, 0x66, 0xf4, 0x85, 0xb9, 0x25, 0x58, 0x43, 0xee, 0x8d, 0xf9,
	0xea, 0x9e, 0xf9, 0xaa, 0x41, 0x10, 0x57, 0x9a, 0xe9, 0x5c, 0xd1, 0x97, 0x26, 0x6e, 0x10, 0xc6,
	0x45, 0x2e, 0x03, 0x4e, 0xa9, 0xe1, 0x36, 0x08, 0x2a, 0xb9, 0xca, 0x85, 0xe6, 0xf4, 0x95, 0xa9,
	0x04, 0x01, 0xd6, 0x17, 0x88, 0x8c, 0xd3, 0x91, 0x39, 0x29, 0x02, 0xf7, 0x4b, 0xd2, 0xd5, 0x17,
	0x79, 0x32, 0x55, 0xf4, 0xd9, 0xb8, 0xbd, 0xdf, 0x3f, 0x7c, 0x75, 0xb0, 0xe4, 0xc3, 0x83, 0x73,
	0xd8, 0x3c, 0x96, 0x11, 0x9f, 0xf9, 0x36, 0x11, 0x88, 0xe2, 0x28, 0xbd, 0x54, 0xf4, 0xb3, 0x71,
	0x1b, 0xe8, 0x11, 0xe0, 0x75, 0xb3, 0xb9, 0xa2, 0x63, 0x0c, 0xe2, 0xda, 0xfb, 0xc3, 0x21, 0x64,
	0x41, 0x50, 0xe3, 0xd5, 0xd2, 0x0f, 0xad, 0xaa, 0x1f, 0x5c, 0xd2, 0x99, 0xb1, 0x80, 0x5b, 0xbb,
	0xe2, 0x1a, 0x94, 0xcf, 0xa4, 0x98, 0xb2, 0x69, 0x7c, 0x8b, 0x8e, 0x6d, 0xf9, 0x25, 0x86, 0x9b,
	0x57, 0x51, 0x12, 0xc5, 0x4c, 0xa2, 0x67, 0x5b, 0x7e, 0x01, 0x81, 0x69, 0x1a, 0xe7, 0x12, 0x3d,
	0xdb, 0xf2, 0x71, 0x5d, 0xb8, 0x6d, 0xab, 0x74, 0x9b, 0xf7, 0x77, 0x9b, 0xf4, 0x7d, 0x7e, 0x85,
	0x4d, 0x75, 0x14, 0x2e, 0x3a, 0xc8, 0xb9, 0xdf, 0x41, 0xad, 0xba, 0x0e, 0x6a, 0x37, 0x75, 0x50,
	0xa7, 0xbe, 0x83, 0x36, 0x1b, 0x3a, 0xa8, 0x7b, 0xbf, 0x83, 0x72, 0x10, 0xcc, 0x94, 0x8a, 0xeb,
	0x85, 0x62, 0xdb, 0x77, 0x14, 0xc3, 0x5e, 0xeb, 0x55, 0x7a, 0xad, 0xea, 0x7a, 0xd2, 0xe4, 0xfa,
	0x7e, 0xbd, 0xeb, 0x07, 0x8d, 0xae, 0x1f, 0x36, 0xb9, 0x7e, 0xa7, 0xde, 0xf5, 0xbb, 0xb5, 0xae,
	0x7f, 0x5a, 0x71, 0x7d, 0xe9, 0x56, 0xb7, 0xd6, 0xad, 0xcf, 0xaa, 0x6e, 0xdd, 0x2b, 0xdd, 0xfa,
	0x04, 0x6d, 0x56, 0x58, 0xb2, 0x30, 0xdf, 0x8b, 0x8a, 0xf9, 0x7e, 0x20, 0x83, 0xe2, 0x52, 0x4f,
	0x62, 0x36, 0xaf, 0x9f, 0x94, 0xb3, 0x98, 0xcd, 0x8b, 0x49, 0x09, 0xeb, 0x25, 0xd5, 0xda, 0xcb,
	0xaa, 0x79, 0x3f, 0x91, 0x9d, 0x82, 0xf1, 0x67, 0xa3, 0xcc, 0x7d, 0xce, 0x45, 0x0f, 0xb7, 0x96,
	0x7a, 0x78, 0x15, 0xef, 0x15, 0x19, 0xfa, 0x3c, 0x8b, 0x6f, 0x91, 0xf9, 0x63, 0xca, 0xdd, 0xb7,
	0xa4, 0x13, 0xa5, 0x33, 0x81, 0xbc, 0xfd, 0x43, 0x7a, 0xa7, 0x25, 0xcb, 0xe1, 0xef, 0x63, 0x96,
	0x7b, 0x58, 0x8e, 0x87, 0x16, 0xe6, 0x8f, 0xee, 0xe4, 0x23, 0xf7, 0x19, 0x66, 0x14, 0xa3, 0xc3,
	0xf3, 0x16, 0xe2, 0xbc, 0x8f, 0x94, 0x06, 0x29, 0xe2, 0x48, 0x69, 0xea, 0x18, 0x01, 0x61, 0xed,
	0xfd, 0xba, 0x38, 0xee, 0x8f, 0x38, 0x63, 0xd7, 0x7c, 0x6c, 0x16, 0x97, 0xdf, 0x5e, 0xba, 0xfc,
	0xaa, 0x04, 0x9d, 0x3b, 0x12, 0xfc, 0xe5, 0xc0, 0xc7, 0x0a, 0x0d, 0xb0, 0xa4, 0xd2, 0xe9, 0x4e,
	0xd5, 0xe9, 0x6f, 0x6d, 0xa1, 0x2d, 0x9c, 0x56, 0x2b, 0xa4, 0x81, 0xac, 0x8a, 0x34, 0xed, 0x75,
	0xa5, 0x81, 0xef, 0x66, 0x6c, 0xce, 0x15, 0xd6, 0x38, 0xf4, 0x0d, 0x80, 0xa8, 0x16, 0x9a, 0xc5,
	0xd8, 0xbc, 0x43, 0xdf, 0x00, 0xef, 0x5f, 0x87, 0x3c, 0x59, 0x94, 0x7d, 0x2e, 0x2e, 0x79, 0x5a,
	0xf9, 0xa6, 0xb3, 0xf6, 0x37, 0xf7, 0x48, 0x37, 0x14, 0x09, 0x8b, 0x52, 0x2b, 0xa4, 0x45, 0x66,
	0xd4, 0x26, 0x91, 0x19, 0x31, 0x43, 0xdf, 0x00, 0xc8, 0xe6, 0xbf, 0x65, 0x91, 0xe4, 0xb6, 0x44,
	0x8b, 0x20, 0x3e, 0xcd, 0x83, 0x4b, 0xae, 0xed, 0xd3, 0x6d, 0x91, 0xa9, 0xfd, 0x92, 0xa7, 0x76,
	0xc0, 0x18, 0x00, 0xd9, 0x2c, 0x08, 0xb8, 0x52, 0x76, 0xbe, 0x58, 0x84, 0xaf, 0x0a, 0x0f, 0x24,
	0xd7, 0x76, 0xc4, 0x58, 0xf4, 0xb9, 0x47, 0x7a, 0x1f, 0xe1, 0x0a, 0xce, 0x61, 0xb8, 0x10, 0xd2,
	0x3d, 0x8b, 0xd2, 0x79, 0xcc, 0x77, 0x37, 0xdc, 0x1e, 0xd9, 0x9c, 0x48, 0x91, 0x67, 0xbb, 0xce,
	0xe1, 0x3f, 0xdb, 0x64, 0x80, 0x52, 0x9c, 0x71, 0x79, 0x1d, 0x05, 0xdc, 0xfd, 0x86, 0x74, 0x8f,
	0xc2, 0x10, 0x3c, 0x7d, 0x5f, 0x86, 0x72, 0xe0, 0x8e, 0x5e, 0xd7, 0x49, 0x54, 0x74, 0x83, 0xb7,
	0x01, 0x2c, 0x13, 0xd3, 0x19, 0x35, 0x2c, 0x39, 0x57, 0x78, 0xe5, 0x0f, 0xb2, 0x7c, 0x4d, 0x7a,
	0x3e, 0x4f, 0xc4, 0x35, 0x7f, 0x88, 0x88, 0xd6, 0x11, 0xc1, 0x8e, 0xb7, 0xe1, 0x4e, 0xc8, 0xd6,
	0xc4, 0x1a, 0xf4, 0x93, 0x86, 0x13, 0xc1, 0xe6, 0xe8, 0x4d, 0x63, 0x31, 0xb0, 0xed, 0x6d, 0xb8,
	0xa7, 0x84, 0x4c, 0xb8, 0x3e, 0xbe, 0x45, 0x4d, 0x57, 0x96, 0xf3, 0x20, 0xd5, 0x7b, 0xd2, 0x47,
	0xaa, 0x93, 0x28, 0xd6, 0x5c, 0xba, 0xaf, 0xeb, 0xb9, 0xcc, 0xee, 0x3a, 0x85, 0xed, 0x98, 0x76,
	0x3f, 0x2b, 0x66, 0x7c, 0xd3, 0x41, 0x61, 0xac, 0xae, 0x14, 0xeb, 0x84, 0xf4, 0x2d, 0x15, 0xbe,
	0x0a, 0x8f, 0xe6, 0xf9, 0x8e, 0x6c, 0x4f, 0x8a, 0xf6, 0x5a, 0xa5, 0xd4, 0xa7, 0x8d, 0x67, 0xc3,
	0xdf, 0xe2, 0xf5, 0x11, 0x53, 0xd1, 0x31, 0x53, 0xdc, 0x7d, 0xd3, 0x50, 0x90, 0x49, 0x59, 0x59,
	0xd2, 0xb7, 0x05, 0xd1, 0x07, 0x78, 0xc3, 0x1e, 0x7d, 0xb2, 0x53, 0x32, 0x30, 0x34, 0xf6, 0x41,
	0x69, 0xaa, 0xc8, 0x6c, 0xaf, 0x47, 0x65, 0x66, 0xcb, 0xff, 0xa1, 0xfa, 0xbe, 0xb0, 0xc0, 0x43,
	0x9e, 0x5a, 0x43, 0xa8, 0x0f, 0x64, 0x30, 0xe1, 0x1a, 0x6a, 0x8a, 0x94, 0x8e, 0x82, 0xc7, 0xb8,
	0xb3, 0xfc, 0xb1, 0xb7, 0x71, 0x3c, 0xfc, 0xa5, 0x5f, 0xf9, 0xcf, 0x68, 0xda, 0x45, 0xf0, 0xd5,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x05, 0x97, 0xa6, 0x57, 0x0d, 0x00, 0x00,
}
